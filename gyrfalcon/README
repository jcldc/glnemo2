Introduction :
==============
This work has been mainly done by Yannick Dalbin during a training
period between January and March 2010. His work is based on
gyrfalcON's manipulator for glnemo1. This new version is
multi-platform (linux, macos, win32), thanks to QT4 Api.

Presentation :
===============

Since September 2004, run-Time Manipulators have been added in Walter
Dehnen's gyrfalcON  simulation program (see $NEMO/usr/dehnen/falcON). 
They are functions (in factC++ classes) that operate on the snapshot
data and are called in gyrfalcON after every complete
blockstep. Run-Time Manipulators are loaded at run-time.
 
 Glnemo2 manipulator transform gyrfalcON simulation program in a 
glnemo2 server allowing real time 3D rendering of the running gyrfalcON
simulation via the glnemo2 program. (see $NEMO/usr/jcl/glnemo2). 

 There is almost no speed impact (< 1%) on the running gyrfalcON
simulation while glnemo2 is connected and is getting data from it. (True only if
gyrfalcON and glnemo2 are started on a different host).

Compilation :
==============

 to compile the manipulator, you need NEMO version >= 3.2.4. By
default, we use $NEMO/usr/dehnen/falcON compiling treepath, but it can
be changed by modifying 'GYRFALCON' variable in the Makefile.
 You need also QT4 API (QT > 4.6 is recommend to prevent some memory leaks)

 - to compile enter:
====================

a) Linux
   ------
   qmake
   make

b) Mac OS X
   --------
   qmake -spec macx-g++
   then
   make

- then install the manipulator
===============================

make install        (Don't forget this step !!!!!)

the manipulator's location will be here 
$NEMO/obj/manip/glnemo2.so
 
HOW to use:
===========

 - from the simulation host:
   - - - - - - - - - - - - -
 start gyrfalcON program as usual, and add the following parameter: 
 manipname=glnemo2


 - from the glnemo2 rendering host:
   - - - - - - - - - - - - - - - - 
 start glnemo2 program as usual, and add the following parameter:
 server=host_running_gyrfalcON


EXAMPLE :
=========

    we assume that the user have 2 Hosts. On the first one, called
node1, we will run gyrfalcON program, on the other one called node2,
we will run glnemo2 program. (in case of you only have one host,
gyrfalcON and glnemo2 will be run on the same machine).

  a) start gyrfalcON (from node1)
  
   ( !!! gyrfalcON environment MUST be loaded: source $NEMO/usr/dehnen/falcON/falcON_start)

    mkexpdisk - 50000| gyrfalcON - . kmax=6 manipname=glnemo2

  b) start glnemo2 (from node2)

   glnemo2 server=node1 select=all play=t

   [if you run both gyrfalcON and glnemo2 on the same box, start glnemo2
as following:  glnemo2 server=localhost]




